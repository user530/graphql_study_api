// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Program {
  id                     Int                    @id @default(autoincrement())
  title                  String
  slug                   String
  showInMenu             Boolean?
  studyFormat            StudyFormat
  goal                   String
  description            String
  price                  BigInt?
  discount               Int?
  subjectsStickerType    StickerType?
  copyToKk               Boolean?
  study_field_id         Int?
  study_field            StudyField?            @relation(fields: [study_field_id], references: [id])
  categoryId             Int
  category               Category               @relation(fields: [categoryId], references: [id])
  icon                   String?
  metaTitle              String?
  metaDescription        String?
  locale                 Locale
  published_at           DateTime
  created_at             DateTime
  updated_at             DateTime
  isActive               Boolean
  // program Program?       self referencing field? wtf?! 
  new                    Boolean?
  hit                    Boolean?
  frdo                   Boolean?
  employment             Boolean?
  whatWillYouLearn       WhatWillYouLearn[]
  specializedSubjects    SpecializedSubject[]
  duration               Duration?
  baseSubjects           BaseSubject[]
  programModulesCounters ProgramModulesCounter?
  diplomas               DiplomaOnProgram[]
}

enum StudyFormat {
  online
  campus
  blended
}

enum StickerType {
  finalAttestation
  fullTimeModuleInMoscow
  practiceModulesAndFinalAttestation
}

model StudyField {
  id           Int       @id @default(autoincrement())
  name         String
  description  String
  copyToKk     Boolean?
  slug         String
  locale       Locale
  published_at DateTime
  created_at   DateTime
  updated_at   DateTime
  programs     Program[]
}

enum Locale {
  ru
}

model Category {
  id           Int          @id @default(autoincrement())
  type         CategoryType
  slug         String
  copyToKk     Boolean
  description  String
  locale       Locale
  published_at DateTime
  created_at   DateTime
  updated_at   DateTime
  labelCasesId Int
  labelCases   LabelCase    @relation(fields: [labelCasesId], references: [id])
  programs     Program[]
}

enum CategoryType {
  mini
  executive
  profession
  course
  mba
}

model LabelCase {
  id         Int        @id @default(autoincrement())
  singular   String
  plural     String
  categories Category[]
}

model Subject {
  id                        Int                  @id @default(autoincrement())
  string                    String
  title                     String?
  duration                  Int?
  new                       Boolean?
  skills                    SkillsOnSubjects[]
  ProgramWhatWillYouLearn   WhatWillYouLearn[]
  ProgramSpecializedSubject SpecializedSubject[]
  ProgramBaseSubjects       BaseSubject[]
}

model Skill {
  id       Int                @id @default(autoincrement())
  title    String?
  string   String?
  new      Boolean?
  subjects SkillsOnSubjects[]
}

model SkillsOnSubjects {
  subjectId Int
  Subject   Subject @relation(fields: [subjectId], references: [id])
  skillId   Int
  Skill     Skill   @relation(fields: [skillId], references: [id])

  @@id([skillId, subjectId])
}

model WhatWillYouLearn {
  programId Int
  Program   Program @relation(fields: [programId], references: [id])
  subjectId Int
  Subject   Subject @relation(fields: [subjectId], references: [id])

  @@id([programId, subjectId])
}

model SpecializedSubject {
  programId Int
  Program   Program @relation(fields: [programId], references: [id])
  subjectId Int
  Subject   Subject @relation(fields: [subjectId], references: [id])

  @@id([programId, subjectId])
}

model Duration {
  id                 Int                     @id @default(autoincrement())
  studyHours         String?
  minStudyMonths     Float?
  practicalLessons   Int?
  workshops          Int?
  modulesDescription String?
  modulesResult      String?
  videomaterials     Int?
  modulesTools       ModuleToolsOnDuration[]
  programId          Int                     @unique
  Program            Program                 @relation(fields: [programId], references: [id])
}

model ModuleTool {
  id        Int                     @id @default(autoincrement())
  tool      String
  durations ModuleToolsOnDuration[]
}

model ModuleToolsOnDuration {
  moduleToolId Int
  ModuleTool   ModuleTool @relation(fields: [moduleToolId], references: [id])
  durationId   Int
  Duration     Duration   @relation(fields: [durationId], references: [id])

  @@id([moduleToolId, durationId])
}

model BaseSubject {
  programId Int
  Program   Program @relation(fields: [programId], references: [id])
  subjectId Int
  Subject   Subject @relation(fields: [subjectId], references: [id])

  @@id([programId, subjectId])
}

model ProgramModulesCounter {
  id           Int     @id @default(autoincrement())
  leftCounter  String?
  rightCounter String?
  programId    Int     @unique
  Program      Program @relation(fields: [programId], references: [id])
}

model Diploma {
  id       Int                @id @default(autoincrement())
  name     String?
  Programs DiplomaOnProgram[]
  // diploma [ ] self referencing field... again?! 
}

model DiplomaOnProgram {
  diplomaId Int
  Diploma   Diploma @relation(fields: [diplomaId], references: [id])
  programId Int
  Program   Program @relation(fields: [programId], references: [id])

  @@id([diplomaId, programId])
}
